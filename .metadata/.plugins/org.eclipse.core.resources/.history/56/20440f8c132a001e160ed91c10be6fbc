package com.spring.dao;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import com.spring.entity.Event;
import java.sql.ResultSet;
import java.sql.Types;
import java.sql.SQLException;
import java.util.List;
import javax.sql.DataSource;
import org.springframework.dao.DuplicateKeyException;
import org.springframework.dao.EmptyResultDataAccessException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.ResultSetExtractor;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Repository;
//Fill your code here
@Repository
public class EventDAO {
    
	DataSource dataSource;
    //Fill your code here
	@Autowired
    private JdbcTemplate jdbcTemplate;

	public List<Event> getAllEvents(){
		//fill your code
		String sql = "SELECT * FROM event";
		myRowMapper r = new myRowMapper();
		jdbcTemplate.query(sql, r);
    }
    
    public String getEventById(int id){
    	  //Fill your code here
        String sql = "SELECT * FROM event WHERE id = ?";
        myRowMapper r = new myRowMapper();
        String res = jdbcTemplate.queryForObject(sql, r, id);
        System.out.println(res);
        return res;
    }
    
	public void createEvent(int id,String eventName,String organiser,String organiserNumber,String hallName, String location) {
		//Fill your code here
		String sql = "INSERT INTO event VALUES(?,?,?,?,?,?)";
		jdbcTemplate.update(sql, id, eventName, organiser, organiserNumber, hallName, location);
	}           
}
